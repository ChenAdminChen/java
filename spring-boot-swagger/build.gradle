//definition plugin version
plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.20'
//    id 'swagger-gradle-plugin' version '1.0.6'

    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.0.7"
}


//plugin
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'com.benjaminsproule.swagger'
//apply plugin: "io.swagger.core.v3.swagger-gradle-plugin"

group = 'com.chen.swagger'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

resolve {
    outputFileName = 'PetStoreAPI'
    outputFormat = 'JSON'
    prettyPrint = 'TRUE'
    classpath = sourceSets.main.runtimeClasspath
//    resourcePackages = ['io.test']
    outputPath = 'test'
}

//swagger {
//    apiSource {
//        springmvc = true
//        locations = ['com.chinamobile.iot']
//        schemes = ['http', 'https']
//        host = 'www.example.com:8080'
//        basePath = '/api'
//        info {
//            title = 'Swagger Gradle Plugin Sample'
//            version = 'v1'
//            // use markdown here because I'm using markdown for output,
//            // if you need to use html or other markup language, you need to use your target language
//            description = 'This is a sample.'
//            termsOfService = 'http://www.example.com/termsOfService'
//            contact {
//                email = 'email@email.com'
//                name = 'Name'
//                url = 'http://www.example.com'
//            }
//            license {
//                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
//                name = 'Apache 2.0'
//            }
//        }
////        securityDefinition {
////            name = 'basicAuth'
////            type = 'basic'
////        }
////        securityDefinition {
////            json = 'securityDefinition.json'
////        }
//        /**
//         Support classpath or file absolute path here.
//         1) classpath e.g: "classpath:/markdown.hbs", "classpath:/templates/hello.html"
//         2) file e.g: "${project.rootDir}/src/main/resources/markdown.hbs", "${project.rootDir}/src/main/resources/template/hello.html"
//         **/
////        templatePath = "${project.rootDir}/src/test/resources/strapdown.html.hbs"
//        outputPath = "${project.rootDir}/generated/document.html"
//        swaggerDirectory = "${project.rootDir}/generated/swagger-ui"
//        attachSwaggerArtifact = true
//    }
//}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compile "io.swagger:swagger-annotations:1.5.21"
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-staticdocs', version: '2.6.1'
    testCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version: '2.0.2.RELEASE'

}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
